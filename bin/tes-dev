#!/usr/bin/env bash

#
# Prelude - make bash behave sanely
# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -euo pipefail
IFS=$'\n\t'

# Beware of CDPATH gotchas causing cd not to work correctly when a user has
# set this in their environment
# https://bosker.wordpress.com/2012/02/12/bash-scripters-beware-of-the-cdpath/
unset CDPATH

TES_WORKSPACE="${TES_WORKSPACE:-~/code/tes}"
TES_TMUX_SESSION_NAME="${TES_TMUX_SESSION_NAME:-development}"

#
# Main function
#
do_it() {
  tmux has-session -t "${TES_TMUX_SESSION_NAME}"  &> /dev/null || {
    configure_new_session
  }

  tmux attach -t "${TES_TMUX_SESSION_NAME}"
}
readonly -f do_it

# N.B. This assumes windows and panes have been reconfigured to be indexed
# from 1 rather than 0
configure_new_session() {
  # Primary editing window
  tmux new-session -s  "${TES_TMUX_SESSION_NAME}" -n editor -d
  tmux send-keys -t "${TES_TMUX_SESSION_NAME}"  cd " ${TES_WORKSPACE}" C-m
  tmux send-keys -t "${TES_TMUX_SESSION_NAME}" 'vim' C-m
  tmux split-window -v -p 10 -t "${TES_TMUX_SESSION_NAME}"
  tmux select-layout -t "${TES_TMUX_SESSION_NAME}" main-horizontal
  tmux send-keys -t  "${TES_TMUX_SESSION_NAME}:1.2" cd " ${TES_WORKSPACE}" C-m

  # Bosco window
  tmux new-window -n console -t  "${TES_TMUX_SESSION_NAME}"
  tmux send-keys -t  "${TES_TMUX_SESSION_NAME}:2" cd " ${TES_WORKSPACE}" C-m

  # Give focus to editor window
  tmux select-window -t  "${TES_TMUX_SESSION_NAME}:1"
}
readonly -f configure_new_session

do_it
exit 0

# vim: syntax=sh et ts=2 sts=2 sw=2
