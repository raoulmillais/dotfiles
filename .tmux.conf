# ~/.tmux.conf
#
# This configuration file binds many of the common GNU screen key bindings to
# appropriate tmux key bindings. Note that for some key bindings there is no
# tmux analogue and also that this set omits binding some commands available in
# tmux but not in screen.
#
# Note this is a good starting point but you should check out the man page for more
# configuration options if you really want to get more out of tmux

### Unbind existing tmux key bindings (except 0-9).

# Use UTF8
set -g utf8
set-window-option -g utf8 on
set-option -g renumber-windows on

# Set the prefix to ^A.
unbind C-b
set -g prefix ^A
bind C-a send-prefix

# Bind appropriate commands similar to screen.
# lockscreen ^X x
unbind ^X
bind ^X lock-server
unbind x
bind x lock-server

# screen ^C \
# bind \ kill-session

# Reload .tmux.conf on <prefix> r
bind r source-file ~/.tmux.conf \; display "Reloaded configuration"

# screen ^C c
unbind ^C
bind ^C new-window
bind c new-window

# detach ^D d
unbind ^D
bind ^D detach

# displays *
unbind *
bind * list-clients

# next ^@ ^N sp n
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# other ^A
unbind ^A
bind ^A last-window

# prev ^H ^P p ^?
unbind ^H
bind ^H previous-window
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

# windows ^W w
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# quit \
unbind \
bind \ confirm-before "kill-server"

# kill K k
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# More straight forward key bindings for splitting
unbind %
bind | split-window -h
bind v split-window -h
unbind '"'
bind - split-window -v
bind h split-window -v

# History
set -g history-limit 1000

# Colours
set -g default-terminal "screen-256color"

# Terminal emulator window title
set -g set-titles on
set -g set-titles-string '#S:#I.#P #W'

# Notifying if other windows has activities
setw -g monitor-activity on
set -g visual-activity on

# Clock
setw -g clock-mode-colour green
setw -g clock-mode-style 24

# " windowlist -b
unbind '"'
bind '"' choose-window

# Powerline glyphs at U+2B60-U+2BFF range ("Miscellaneous Symbols and Arrows")
# These are the code points used in Lokaltog/vim-powerline
if-shell 'test $(echo "${TMUX_POWERLINE_SYMBOLS}") = "vim-powerline"' 'set-environment -g TMUX_POWERLINE_SYMBOL_RIGHT_FULL "⮀"'
if-shell 'test $(echo "${TMUX_POWERLINE_SYMBOLS}") = "vim-powerline"' 'set-environment -g TMUX_POWERLINE_SYMBOL_RIGHT_THIN "⮁"'
if-shell 'test $(echo "${TMUX_POWERLINE_SYMBOLS}") = "vim-powerline"' 'set-environment -g TMUX_POWERLINE_SYMBOL_LEFT_FULL "⮂"'
if-shell 'test $(echo "${TMUX_POWERLINE_SYMBOLS}") = "vim-powerline"' 'set-environment -g TMUX_POWERLINE_SYMBOL_LEFT_THIN "⮃"'

# Status Bar
set -g status-bg black
set -g status-fg white
setw -g window-status-current-bg red
set -g status-interval 1
set -g status-left '#[bg=green]#[fg=black]#H#[default]#[bg=black]#[fg=green]⮀#[default]'
#set -g window-status-current-format 
set -g status-right '#[fg=yellow]#(cut -d " " -f 1-4 /proc/loadavg)#[default] #[default]⮂#[fg=black,bold]#[bg=white]%Y-%m-%d %H:%M:%S#[default]'
